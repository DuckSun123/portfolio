{"version":3,"sources":["Components/Card.jsx","Containers/Project/struckture.js","Containers/Project/Projects.jsx","Containers/Header/Header.jsx","assets/mimoji/good.png","Containers/About/structure.js","Containers/About/About.jsx","Components/ScrollGuide/ScrollGuide.jsx","Containers/Typist/TypistContainer.jsx","Containers/Contact/Contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","item","onClick","className","key","title","content","projectList","projectDetailList","Projects","useState","isModalVisible","setIsModalVisible","showProject","setshowProject","showModal","id","find","x","useEffect","targetElements","document","querySelectorAll","window","VanillaTilt","init","max","speed","glare","vanillaTilt","destroy","map","visible","onOk","onCancel","Header","Layout","HeaderContainer","style","position","zIndex","width","extra","href","skills","status","timelines","color","About","src","ImageGood","alt","Item","i","type","percent","ScrollGuide","TypistContainer","count","setCount","onTypingDone","Backspace","delay","Contact","Content","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bc20b91.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.less';\r\n\r\nconst Card = ({ item, onClick }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"content\">\r\n                <h2>0{item.key}</h2>\r\n                <h3>{item.title}</h3>\r\n                <p>{item.content}</p>\r\n                <a  onClick={() => onClick(item.key)}>Read More</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","export const projectList = [\r\n    {\r\n        title: 'Starbucks 웹페이지',\r\n        content: `저는 평소의 커피를 좋아하고\r\n        가장 좋아하고 유명한 커피 브랜드의 하나인\r\n        Starbucks의 메인 웹사이트를 만들어 보았습니다.\r\n        인터넷 강의를 참조해,\r\n        HTML, CSS, JavaScript를 활용하여\r\n        메인 웹사이트와 로그인 사이트를 만들었습니다.`,\r\n        key: 1\r\n    },\r\n    {\r\n        title: 'Todo List',\r\n        content: `JavaScript의 이해도를 높이기 위해\r\n        3개의 Todo List를 만들었고,\r\n        다양한 방법을 통해서 같은 기능을\r\n        구현할 수 있도록 노력하였습니다.`,\r\n        key: 2\r\n    },\r\n    {\r\n        title: '영화 사이트',\r\n        content: '실시간으로 상영하는 영화를 띄워주기 위한 기능 만들기를 목표로 하고 코딩을 설계했으며,',\r\n        key: 3\r\n    }\r\n\r\n]\r\n\r\nexport const projectDetailList = [\r\n    {\r\n        title: 'Starbucks 웹페이지',\r\n        content: `저는 평소의 커피를 좋아하고\r\n        가장 좋아하고 유명한 커피 브랜드의 하나인\r\n        Starbucks의 메인 웹사이트를 만들어 보았습니다.\r\n        인터넷 강의를 참조해,\r\n        HTML, CSS, JavaScript를 활용하여\r\n        메인 웹사이트와 로그인 사이트를 만들었습니다.`,\r\n        key: 1\r\n    },\r\n    {\r\n        title: 'Card Two',\r\n        content: `JavaScript의 이해도를 높이기 위해\r\n        3개의 Todo List를 만들었고,\r\n        다양한 방법을 통해서 같은 기능을\r\n        구현할 수 있도록 노력하였습니다.`,\r\n        key: 2\r\n    },\r\n    {\r\n        title: '영화 사이트',\r\n        content: '실시간으로 상영하는 영화를 띄워주기 위한 기능 만들기를 목표로 하고 코딩을 설계했으며,',\r\n        key: 3\r\n    }\r\n\r\n]","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'antd'; \r\nimport Card from '../../Components/Card';\r\nimport './index.less';\r\nimport { projectList, projectDetailList } from './struckture';\r\nconst Projects = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [showProject, setshowProject] = useState({});\r\n\r\n    const showModal = (id) => {\r\n        setshowProject(projectDetailList.find(x => x.key === id));\r\n        setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let targetElements = document.querySelectorAll(\".card\");\r\n        window.VanillaTilt.init(targetElements, {\r\n            max: 25,\r\n            speed: 400,\r\n            glare: true,\r\n            'max-glare': 1\r\n        });\r\n\r\n        return () => {\r\n            if (targetElements && targetElements.vanillaTilt) {\r\n                targetElements.vanillaTilt.destroy();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"projectContainer\">\r\n            <h3>PROJECT</h3>\r\n            <div className=\"container\">\r\n                {projectList.map((item) => <Card key={item.key} item={item} onClick={showModal} />)}\r\n            </div>\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                {showProject.title}\r\n                {showProject.content}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport { Layout, Button, PageHeader } from 'antd';\r\n\r\nimport './index.less';\r\n\r\nconst { Header } = Layout;\r\nconst HeaderContainer = () => {\r\n  return (\r\n    <Header style={{ position: 'fixed', zIndex: 2, width: '100%' }}>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Jae Hyuck Lee\"\r\n        extra={[\r\n          <a key=\"about\" href=\"#aboutContainer\">About Me</a>,\r\n          <a key=\"project\" href=\"#projectContainer\">Project</a>,\r\n          <a key=\"contack\" href=\"#contackContainer\">CONTACT</a>,\r\n        ]}\r\n      />\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default HeaderContainer;\r\n","export default __webpack_public_path__ + \"static/media/good.94524e17.png\";","export const skills = [{\r\n    title: 'HTML',\r\n    status: 75\r\n},\r\n\r\n{\r\n    title: 'CSS',\r\n    status: 75\r\n},\r\n\r\n{\r\n    title: 'JAVASCRIPT',\r\n    status: 60\r\n},\r\n\r\n\r\n]\r\n\r\nexport const timelines = [\r\n    {\r\n        title: '시각 디자인 수업 수료',\r\n        color: 'blue'\r\n    },\r\n    {\r\n        title: '퍼스트캠퍼스 프론트엔트 수료',\r\n        color: 'blue'\r\n    },\r\n    {\r\n        title: '프론트엔드 독학 시작',\r\n        color: 'green'\r\n    },\r\n    {\r\n        title: '각종 토이 프로젝트 시작',\r\n        color: 'gray'\r\n    },\r\n    {\r\n        title: '프로젝트',\r\n        color: 'gray'\r\n    },\r\n    {\r\n        title: '스타벅스 프로젝트',\r\n        color: 'gray'\r\n    },\r\n    {\r\n        title: '취업 예정',\r\n        color: 'red'\r\n    }\r\n]","import React from 'react';\r\nimport './index.less';\r\nimport ImageGood from '../../assets/mimoji/good.png';\r\nimport { Timeline, Progress } from 'antd';\r\nimport { skills, timelines } from './structure';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div id=\"aboutContainer\">\r\n            <div className=\"about-flex-container\">\r\n                <div className=\"image-wrap\">\r\n                    <div>\r\n                      <img src={ImageGood} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"desc-wrap\">\r\n                    <p>HI! <span>I'm Jaehyeok Lee!</span></p>\r\n                    {/* <p>DEVELOPER</p> */}\r\n                    <div className=\"timeline-wrap\">\r\n                        <p>준비된 Front-end 개발자 이재혁 입니다.</p>\r\n                        <h4>TMI..</h4>\r\n                        <Timeline>\r\n                            {timelines.map((item, key) => (\r\n                                <Timeline.Item key={key} color={item.color}>{item.title}</Timeline.Item>\r\n                            ))}\r\n                        </Timeline>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"skill-wrap\">\r\n                <h3>SKILLS</h3>\r\n                <ul>\r\n                    {skills.map((item, i) => (\r\n                        <li key={i}>\r\n                            <p>{item.title}</p>\r\n                            <Progress type=\"circle\" percent={item.status} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './index.less';\r\nconst ScrollGuide = () => {\r\n    return (\r\n        <div className=\"scroll-downs\">\r\n            <div className=\"mousey\">\r\n                <div className=\"scroller\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScrollGuide;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Typist from 'react-typist';\r\nimport ScrollGuide from '../../Components/ScrollGuide/ScrollGuide';\r\nimport './index.less'\r\nconst TypistContainer = () => {\r\n    const [count, setCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setCount(1);\r\n    }, [count]);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"typist-wrap\">\r\n            {count ? <Typist onTypingDone={() => setCount(0)}>\r\n                <span>안녕하세요🤙</span>\r\n                <Typist.Backspace count={8} delay={1000} />\r\n                <span>이재혁 포트폴리오입니다👍</span>\r\n                <Typist.Backspace count={15} delay={1000} />\r\n            </Typist> : (\"\")}\r\n        </div>\r\n        <ScrollGuide />\r\n\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default TypistContainer;\r\n","import React from 'react';\r\nimport './index.less';\r\nconst Contact = () => {\r\n    return (\r\n        <div id=\"contackContainer\">\r\n            <h3>CONTACT</h3>\r\n            \r\n            <p>이메일: <a href=\"mailto:happiness-0613@naver.com\">happiness-0613@naver.com</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import './App.less';\nimport Projects from './Containers/Project/Projects';\nimport { Layout } from 'antd';\nimport HeaderContainer from './Containers/Header/Header';\nimport About from './Containers/About/About';\nimport TypistContainer from './Containers/Typist/TypistContainer';\nimport Contact from './Containers/Contact/Contact';\n\nconst {  Footer,  Content } = Layout;\nfunction App() {\n  return (\n    <Layout>\n      <HeaderContainer />\n      <Content>\n        <TypistContainer />\n        <About />\n        <Projects />\n        <Contact />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}